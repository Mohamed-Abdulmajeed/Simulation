/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Single_Server;

import java.awt.Color;
import java.io.FileOutputStream;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author ATD
 */
public class FRM_Tables extends javax.swing.JFrame {

    /**
     * Creates new form Form5
     */
    public FRM_Tables() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        Table_Total = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        Arrival_Table = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        Server_Table = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btn_Step1 = new javax.swing.JButton();
        btn_Step2 = new javax.swing.JButton();
        btn_Step3 = new javax.swing.JButton();
        btn_Draw = new javax.swing.JButton();
        btn_Set_Excel = new javax.swing.JButton();
        btn_Show_info1 = new javax.swing.JButton();
        btn_Show_info = new javax.swing.JButton();

        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(236, 64, 61));

        jScrollPane6.setFont(new java.awt.Font("Cambria Math", 0, 24)); // NOI18N

        Table_Total.setBackground(new java.awt.Color(29, 197, 222));
        Table_Total.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Table_Total.setForeground(new java.awt.Color(153, 0, 153));
        Table_Total.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Number", "Name", "R.Digit", "Interval Time", "Arr.Clock", "Start", "R.Digit", "Duration", "End", "Waiting", "Idle", "Spent Time ", "operation"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Table_Total.setIntercellSpacing(new java.awt.Dimension(3, 3));
        Table_Total.setMinimumSize(new java.awt.Dimension(65, 222));
        jScrollPane6.setViewportView(Table_Total);

        jScrollPane4.setFont(new java.awt.Font("Cambria Math", 0, 24)); // NOI18N

        Arrival_Table.setBackground(new java.awt.Color(29, 197, 222));
        Arrival_Table.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Arrival_Table.setForeground(new java.awt.Color(153, 0, 153));
        Arrival_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Time Btween Arrival", "Probability", "Cumulative", "From", "To"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Float.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Arrival_Table.setIntercellSpacing(new java.awt.Dimension(3, 3));
        jScrollPane4.setViewportView(Arrival_Table);

        jScrollPane5.setFont(new java.awt.Font("Cambria Math", 0, 24)); // NOI18N

        Server_Table.setBackground(new java.awt.Color(29, 197, 222));
        Server_Table.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Server_Table.setForeground(new java.awt.Color(153, 0, 153));
        Server_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Survice Time", "Probability", "Cumulative", "From", "To"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Float.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Server_Table.setIntercellSpacing(new java.awt.Dimension(3, 3));
        jScrollPane5.setViewportView(Server_Table);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        btn_Step1.setBackground(new java.awt.Color(153, 0, 102));
        btn_Step1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_Step1.setForeground(new java.awt.Color(204, 255, 255));
        btn_Step1.setText("Step 1");
        btn_Step1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Step1ActionPerformed(evt);
            }
        });

        btn_Step2.setBackground(new java.awt.Color(153, 0, 102));
        btn_Step2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_Step2.setForeground(new java.awt.Color(204, 255, 255));
        btn_Step2.setText("Step 2");
        btn_Step2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Step2ActionPerformed(evt);
            }
        });

        btn_Step3.setBackground(new java.awt.Color(153, 0, 102));
        btn_Step3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_Step3.setForeground(new java.awt.Color(204, 255, 255));
        btn_Step3.setText("Step 3");
        btn_Step3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Step3ActionPerformed(evt);
            }
        });

        btn_Draw.setBackground(new java.awt.Color(153, 0, 102));
        btn_Draw.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_Draw.setForeground(new java.awt.Color(204, 255, 255));
        btn_Draw.setText("Draw");
        btn_Draw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DrawActionPerformed(evt);
            }
        });

        btn_Set_Excel.setBackground(new java.awt.Color(153, 0, 102));
        btn_Set_Excel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_Set_Excel.setForeground(new java.awt.Color(204, 255, 255));
        btn_Set_Excel.setText("Set Excel");
        btn_Set_Excel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Set_ExcelActionPerformed(evt);
            }
        });

        btn_Show_info1.setBackground(new java.awt.Color(0, 0, 204));
        btn_Show_info1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_Show_info1.setForeground(new java.awt.Color(255, 255, 255));
        btn_Show_info1.setText("Back");
        btn_Show_info1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Show_info1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_Step2, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                            .addComponent(btn_Step1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_Step3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(btn_Set_Excel, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_Draw, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_Show_info1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_Draw, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_Step1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Set_Excel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Step2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(btn_Step3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(btn_Show_info1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btn_Show_info.setBackground(new java.awt.Color(0, 0, 204));
        btn_Show_info.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_Show_info.setForeground(new java.awt.Color(255, 255, 255));
        btn_Show_info.setText("Show Information");
        btn_Show_info.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Show_infoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_Show_info)
                    .addComponent(jScrollPane6))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(btn_Show_info)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_Step1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Step1ActionPerformed
try{
    
    int arrTimeB []= new int[7];
    int min =100, max =0;
        for (int i = 0; i < 7; i++) 
        {
            arrTimeB[i]= (int) (Arrays.arreyTimeA[1+i] - Arrays.arreyTimeA[i]);
            if(min>arrTimeB[i])
                min=arrTimeB[i];
            if(max<arrTimeB[i])
                max=arrTimeB[i];
        }
        
        int x=max-min+1;
        Arrays.x=x;
        int arrTBArrival[]= new int[x];
        
    for(int i=0;i<x;i++)
    {
      arrTBArrival[i]=min+i;
    }
for(int i=0;i<x;i++)
{
Arrival_Table.setValueAt(arrTBArrival[i], i, 0);
}
float NumberArrbet[]= {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};

for (int i = 0; i < x; i++) 
{
    for (int j = 0; j < 7; j++) 
    {
        if( arrTBArrival[i]==arrTimeB[j])
            NumberArrbet[i]+=1;
    }      
    NumberArrbet[i]/=7;

}
for(int i=0;i<x;i++)
{
Arrival_Table.setValueAt(NumberArrbet[i], i, 1);
}

for(int i=0;i<x;i++)
{
   if(i==0)
       Arrival_Table.setValueAt(Arrival_Table.getValueAt(0, 1), 0, 2);
   else
       Arrival_Table.setValueAt((float)Arrival_Table.getValueAt(i, 1)+(float)Arrival_Table.getValueAt(i-1, 2), i, 2);
}

for(int i=0;i<x;i++)
   Arrival_Table.setValueAt((int)(100*(float)Arrival_Table.getValueAt(i, 2)), i, 4);

for(int i=0;i<x;i++)
{
    if(i==0)
        Arrival_Table.setValueAt(1,i,3);
    else
        Arrival_Table.setValueAt((int)(1+(int)Arrival_Table.getValueAt(i-1, 4)), i, 3);
}

} 
        catch (Exception ex){
            JOptionPane.showMessageDialog(null,ex.getMessage());
    }

// TODO add your handling code here:
    }//GEN-LAST:event_btn_Step1ActionPerformed

    private void btn_Step2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Step2ActionPerformed
try{

int arrTimeB []= new int[7];
int min =100, max =0;
        for (int i = 0; i < 7; i++)
        {
            arrTimeB[i]= (int) ( Arrays.arreyServiceC[i]);
            if(min>arrTimeB[i])
                min=arrTimeB[i];
            if(max<arrTimeB[i])
                max=arrTimeB[i];
        }
    int x=max-min+1;
     Arrays.y=x;
    int arrTBArrival[]= new int[x];
    
for(int i=0;i<x;i++)
{
    arrTBArrival[i]=min+i;
}
for(int i=0;i<x;i++)
{
Server_Table.setValueAt(arrTBArrival[i], i, 0);
}
float NumberArrbet[]= {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};

for (int i = 0; i < x; i++) 
{
    for (int j = 0; j < 7; j++)
    {
        if( arrTBArrival[i]==arrTimeB[j])
            NumberArrbet[i]+=1;
    }        NumberArrbet[i]/=7;

}
for(int i=0;i<x;i++)
{
Server_Table.setValueAt(NumberArrbet[i], i, 1);
}

for(int i=0;i<x;i++)
{
   if(i==0)
       Server_Table.setValueAt(Server_Table.getValueAt(0, 1), 0, 2);
   else
       Server_Table.setValueAt((float)Server_Table.getValueAt(i, 1)+(float)Server_Table.getValueAt(i-1, 2), i, 2);
}

for(int i=0;i<x;i++)
   Server_Table.setValueAt((int)(100*(float)Server_Table.getValueAt(i, 2)), i, 4);

for(int i=0;i<x;i++)
{
    if(i==0)
        Server_Table.setValueAt(1,i,3);
    else
        Server_Table.setValueAt((int)(1+(int)Server_Table.getValueAt(i-1, 4)), i, 3);
}



}
 catch (Exception ex){
            JOptionPane.showMessageDialog(null,ex.getMessage());
    }
       
// TODO add your handling code here:
    }//GEN-LAST:event_btn_Step2ActionPerformed

    @SuppressWarnings("SuspiciousIndentAfterControlStatement")
    private void btn_Step3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Step3ActionPerformed
try{
  for(int i=0;i<20;i++)
  {       
        Table_Total.setValueAt(i+1, i, 0);
  }   
String[] name= {"Ahmed","Ali","Omer","Mohamed","Mahmoud","Saad","Fady",
                "Abdullah","Turki","Talal","Adel","Maher","Hussam","Tariq","Samy",
                "Salah","Khaled","Bader","Yasser","Ibrahim"};

for(int i=0;i<20;i++)
{
    int j= 0+(int)(Math.random()*20);
        Table_Total.setValueAt(name[j], i, 1);
}
for(int i=0;i<20;i++) 
{
    int n = (int)(1+(Math.random()*100));
    Table_Total.setValueAt(n, i, 2); 
}

for(int i=0;i<20;i++)
{ 
  for(int j=0;j<Arrays.x;j++)
  { 
    if((((int)Table_Total.getValueAt(i,2) > (int)Arrival_Table.getValueAt(j,3))||((int)Table_Total.getValueAt(i,2) == (int)Arrival_Table.getValueAt(j,3)))&&(((int)Table_Total.getValueAt(i,2) < (int)Arrival_Table.getValueAt(j,4))||((int)Table_Total.getValueAt(i,2) == (int)Arrival_Table.getValueAt(j,4)))) 
     
        Table_Total.setValueAt(Arrival_Table.getValueAt(j, 0), i, 3);
  }
}
for(int i=0;i<20;i++)
{
    if(i==0)
      Table_Total.setValueAt(Table_Total.getValueAt(0, 3), 0, 4);
      else  Table_Total.setValueAt((int)((int)Table_Total.getValueAt(i, 3)+(int)Table_Total.getValueAt(i-1, 4)), i, 4);   
}

for(int i=0;i<20;i++) 
{
    int n = (int)(1+(Math.random()*100));
    Table_Total.setValueAt(n, i, 6); 
}

for(int i=0;i<20;i++)
{ 
  for(int j=0;j<Arrays.y;j++)
  { 
    if((((int)Table_Total.getValueAt(i,6) > (int)Server_Table.getValueAt(j,3))||((int)Table_Total.getValueAt(i,6) == (int)Server_Table.getValueAt(j,3)))&&(((int)Table_Total.getValueAt(i,6) < (int)Server_Table.getValueAt(j,4))||((int)Table_Total.getValueAt(i,6) == (int)Server_Table.getValueAt(j,4)))) 
    
        Table_Total.setValueAt(Server_Table.getValueAt(j, 0), i, 7);  
  }
}
for(int i=0;i<20;i++)
{
    if(i==0)
    {
        Table_Total.setValueAt(Table_Total.getValueAt(0, 4), 0, 5);
        Table_Total.setValueAt((int)((int)Table_Total.getValueAt(0, 7)+(int)Table_Total.getValueAt(0, 5)), 0, 8);
    }
    else
    {
        
    Table_Total.setValueAt(Math.max((int)Table_Total.getValueAt(i, 4),(int)Table_Total.getValueAt(i-1, 8)) , i, 5);
        Table_Total.setValueAt((int)((int)Table_Total.getValueAt(i, 7)+(int)Table_Total.getValueAt(i, 5)), i, 8);    
    }     
}
for(int i=0;i<20;i++)
{
    if(i==0)
    {
     Table_Total.setValueAt(0, 0, 9);
     Table_Total.setValueAt((int)((int)Table_Total.getValueAt(i, 5)-0), 0, 10);
     Table_Total.setValueAt((int)((int)Table_Total.getValueAt(i, 8)-(int)Table_Total.getValueAt(i, 4)), i, 11);
    }
    else
    {
     Table_Total.setValueAt((int)((int)Table_Total.getValueAt(i, 5)-(int)Table_Total.getValueAt(i, 4)), i, 9);
     Table_Total.setValueAt((int)((int)Table_Total.getValueAt(i, 5)-(int)Table_Total.getValueAt(i-1, 8)), i, 10);
     Table_Total.setValueAt((int)((int)Table_Total.getValueAt(i, 8)-(int)Table_Total.getValueAt(i, 4)), i, 11);
    }   
}
for(int i=0;i<20;i++)
{
String[] op = {"NewAccount","Inquiry","Deposit","Withdrow","Transfer"};
int a= 0+(int)(Math.random()*5);
Table_Total.setValueAt(op[a], i, 12);
}


}
catch (Exception ex){
            JOptionPane.showMessageDialog(null,ex.getMessage());
   }
    
// TODO add your handling code here:
    }//GEN-LAST:event_btn_Step3ActionPerformed

    private void btn_Set_ExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Set_ExcelActionPerformed

String exelFolder = "C:\\Users\\ATD\\Desktop\\";
String filepath  = exelFolder +"Single Server.xlsx" ; 

try{
   FileOutputStream fos = new FileOutputStream(filepath);
   XSSFWorkbook workbook =new XSSFWorkbook();
   XSSFSheet sheet =  workbook.createSheet("First Sheet");

   Row r = sheet.createRow(1);
     Cell c =r.createCell(2);
             c.setCellValue("Arrival Probability");
             
          c =r.createCell(8);
             c.setCellValue("Survices Probability");
             
       r=sheet.createRow(2);      
          c =r.createCell(1);
             c.setCellValue("Time Between\nArrival");
             
          c =r.createCell(2);
             c.setCellValue("Probability");
             
          c =r.createCell(3);
             c.setCellValue("Cumulative\n Probability ");
             
          c =r.createCell(4);
             c.setCellValue("From");
             
          c =r.createCell(5);
             c.setCellValue("To");
        
          c =r.createCell(7);
             c.setCellValue("Survice Time");
             
          c =r.createCell(8);
             c.setCellValue("Probability"); 
             
          c =r.createCell(9);
             c.setCellValue("Cumulative\n Probability ");
             
          c =r.createCell(10);
             c.setCellValue("From");
             
          c =r.createCell(11);
             c.setCellValue("To");
             
       
        for (int i = 0; i < 10; i++)
        {
          for (int j = 0; j < 5; j++)
          {
            if(Arrival_Table.getValueAt(i, j)==null)
                Arrays.arrival[i][j]="";
            else
             Arrays.arrival[i][j]= String.valueOf(Arrival_Table.getValueAt(i, j)) ;
          }
        }
        for (int i = 0; i < 10; i++)
        {
          for (int j = 0; j < 5;j++)
          {
            if(Server_Table.getValueAt(i, j)==null)
                Arrays.surver[i][j]="";
            else
             Arrays.surver[i][j]= String.valueOf(Server_Table.getValueAt(i, j)) ;
          }  
        }     
for(int i=0;i<8;i++)
{
    r=sheet.createRow(4+i);
    for(int j=0;j<5;j++)
    {
      c=r.createCell(j+1);
            
      if(Arrays.arrival[i][j]!="")
          c.setCellValue(Double.valueOf(Arrays.arrival[i][j]));
    }
}
for(int i=0;i<8;i++)
{
    r=sheet.getRow(4+i);
    for(int j=0;j<5;j++)
    {
        c=r.createCell(j+7);  
        if(Arrays.surver[i][j]!="")
           c.setCellValue(Double.valueOf(Arrays.surver[i][j]));
    }
}

r=sheet.createRow(14);
   c=r.createCell(1);
      c.setCellValue("Number");
      
   c=r.createCell(2);
      c.setCellValue("Name");
      
   c=r.createCell(3);
      c.setCellValue("R.Digit");
      
   c=r.createCell(4);
      c.setCellValue("Interval Time");
      
   c=r.createCell(5);
      c.setCellValue("Arr.Clock");
      
   c=r.createCell(6);
      c.setCellValue("Start");
      
   c=r.createCell(7);
      c.setCellValue("R.Digit");
      
   c=r.createCell(8);
      c.setCellValue("Duration");

   c=r.createCell(9);
      c.setCellValue("End");

   c=r.createCell(10);
      c.setCellValue("Waiting");

   c=r.createCell(11);
      c.setCellValue("Idle");

   c=r.createCell(12);
      c.setCellValue("Spent Time");

   c=r.createCell(13);
      c.setCellValue("Operation");

for (int i = 0; i < 20; i++)
{
    for (int j = 0; j < 13;j++)
        Arrays.total[i][j]= String.valueOf(Table_Total.getValueAt(i, j)) ;
}        
for(int i=0;i<20;i++)
{
    r=sheet.createRow(16+i);
    for(int j=0;j<13;j++)
    {
        c=r.createCell(j+1);
        if(j==1||j==12)
           c.setCellValue(Arrays.total[i][j]);
        else
           c.setCellValue(Double.valueOf(Arrays.total[i][j]));
    }
}

     


        workbook.write(fos);
        workbook.close();
        JOptionPane.showMessageDialog(null,"Excel Saved on C:\\Users\\ATD\\Desktop\\");
}
catch (Exception ex){
            JOptionPane.showMessageDialog(null,ex.getMessage());
   }


// TODO add your handling code here:
    }//GEN-LAST:event_btn_Set_ExcelActionPerformed

    private void btn_DrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DrawActionPerformed
try{
for (int i = 0; i < 20; i++) 
{
    for (int j = 0; j < 13;j++)
         Arrays.total[i][j]= String.valueOf(Table_Total.getValueAt(i, j)) ;
}         

FRM_Draw f2 =new FRM_Draw();
myDrow d = new myDrow(f2) ;

            d.line(50,500,2050,500,Color.black);
            for(int i= 80;i<=2050;i+=30)
            {
                d.line(i, 495, i, 505,Color.black);
            }
            d.line(50, 500, 50, 300,Color.black);
            for(int i= 450;i>300;i-=60)
            {
                d.line(45, i, 55, i,Color.black);
            }
            
            Color c1 =Color.green;
            Color c2 =Color.BLUE;
            Color c3 =Color.red;
            Color c4 =Color.BLACK;
            Color c5 =Color.YELLOW;
            Color c =Color.red;
            int inc=400;
            int inc1=0;
            int m=1;
            
    boolean bool=false;
    
for(int i= 0;i<20;i++)
{                 
               if(i==1|| i==6||i== 11|| i==16)
                   c=Color.green;
               if(i==2|| i==7||i== 12|| i==17)
                   c=Color.BLUE;
               if(i==3|| i==8||i== 13|| i==18)
                   c=Color.BLACK;
               if(i==4|| i==9||i== 14|| i==19)
                   c=Color.YELLOW;
               if(i==5||i==10||i== 15)
                   c=Color.red;
                              
    if(m==2&&i>1&&bool==true&&  Integer.parseInt(Arrays.total[i][4])<=Integer.parseInt(Arrays.total[i-1][5])&&Integer.parseInt(Arrays.total[i-1][4])<=Integer.parseInt(Arrays.total[i-2][5]))
    { 
     inc=360;bool=false;m=3;inc1=2;
    }
    else if(m==1&&i>1&&bool==false && Integer.parseInt(Arrays.total[i][4])<=Integer.parseInt(Arrays.total[i-1][5])&&Integer.parseInt(Arrays.total[i-1][4])<=Integer.parseInt(Arrays.total[i-2][5]))
    {
        inc=380;bool=true;m=2;inc1=1;
    }
    else 
    {
        inc=400;bool=false;m=1;inc1=0;
    }
    
    d.line(50+30*(Integer.parseInt(Arrays.total[i][5])), 450, 50+30*(Integer.parseInt(Arrays.total[i][8])), 450);
    if(Integer.parseInt(Arrays.total[i][9])>0)
       d.line(inc1+50+30*(Integer.parseInt(Arrays.total[i][5])), inc, inc1+50+30*(int)(Integer.parseInt(Arrays.total[i][5])-(Integer.parseInt(Arrays.total[i][9]))), inc,c);
                
}
        bool=false;
            
for(int i= 0;i<20;i++)
{
    if(m==2&&i>1&&bool==true&&  Integer.parseInt(Arrays.total[i][4])<=Integer.parseInt(Arrays.total[i-1][5])&&Integer.parseInt(Arrays.total[i-1][4])<=Integer.parseInt(Arrays.total[i-2][5]))
    { 
        inc=360;bool=false;m=3;inc1=2;
    }
    else if(m==1&&i>1&&bool==false && Integer.parseInt(Arrays.total[i][4])<=Integer.parseInt(Arrays.total[i-1][5])&&Integer.parseInt(Arrays.total[i-1][4])<=Integer.parseInt(Arrays.total[i-2][5]))
    {
        inc=380;bool=true;m=2;inc1=1;
    }
    else
    {
        inc=400;bool=false;m=1;inc1=0;
    }
              
               if(i==1|| i==6||i== 11|| i==16)
                   c=Color.green;
               if(i==2|| i==7||i== 12|| i==17)
                   c=Color.BLUE;
               if(i==3|| i==8||i== 13|| i==18)
                   c=Color.BLACK;
               if(i==4|| i==9||i== 14|| i==19)
                   c=Color.YELLOW;
               if(i==5||i==10||i== 15)c=Color.red;
                 
        d.line(50+30*(Integer.parseInt(Arrays.total[i][5])), 500, 50+30*(Integer.parseInt(Arrays.total[i][5])), 450);
    if(Integer.parseInt(Arrays.total[i][9])>0)
        d.line(inc1+50+30*(int)(Integer.parseInt(Arrays.total[i][5])-(Integer.parseInt(Arrays.total[i][9]))), 450,inc1+ 50+30*(int)(Integer.parseInt(Arrays.total[i][5])-(Integer.parseInt(Arrays.total[i][9]))), inc,c);
              
}
        bool=false;
            
for(int i= 0;i<20;i++)
{
   if(m==2&&i>1&&bool==true&&  Integer.parseInt(Arrays.total[i][4])<=Integer.parseInt(Arrays.total[i-1][5])&&Integer.parseInt(Arrays.total[i-1][4])<=Integer.parseInt(Arrays.total[i-2][5]))
     {
         inc=360;bool=false;m=3;inc1=2;
     }
    else if(m==1&&i>1&&bool==false && Integer.parseInt(Arrays.total[i][4])<=Integer.parseInt(Arrays.total[i-1][5])&&Integer.parseInt(Arrays.total[i-1][4])<=Integer.parseInt(Arrays.total[i-2][5]))
    {
        inc=380;bool=true;m=2;inc1=1;
    }
    else
    {
        inc=400;bool=false;m=1;inc1=0;
    }
               if(i==1|| i==6||i== 11|| i==16)
                   c=Color.green;
               if(i==2|| i==7||i== 12|| i==17)
                   c=Color.BLUE;
               if(i==3|| i==8||i== 13|| i==18)
                   c=Color.BLACK;
               if(i==4|| i==9||i== 14|| i==19)
                   c=Color.YELLOW;
               if(i==5||i==10||i== 15)
                   c=Color.red;
                 
    d.line(50+30*(Integer.parseInt(Arrays.total[i][8])), 500, 50+30*(Integer.parseInt(Arrays.total[i][8])), 450);
    if(Integer.parseInt(Arrays.total[i][9])>0)
       d.line(inc1+50+30*(Integer.parseInt(Arrays.total[i][5])), inc, inc1+50+30*(Integer.parseInt(Arrays.total[i][5])), 450,c);  

}
                   
            JLabel Ln1=new JLabel("1");
            JLabel Ln2=new JLabel("2");
            JLabel Ln3=new JLabel("3");
            
            Ln1.setBounds(0,0, 50, 50);
            Ln2.setBounds(0,0, 50, 50);
            Ln3.setBounds(0,0, 50, 50);
            
            Ln1.setLocation(25, 425);
            Ln2.setLocation(25, 365);
            Ln3.setLocation(25, 305);
            
            f2.add(Ln1);
            f2.add(Ln2);
            f2.add(Ln3);
            /////////////////
            JLabel Lblcustomer1 = new JLabel("1");
            JLabel Lblcustomer2 = new JLabel("2");
            JLabel Lblcustomer3 = new JLabel("3");
            JLabel Lblcustomer4 = new JLabel("4");
            JLabel Lblcustomer5 = new JLabel("5");
            JLabel Lblcustomer6 = new JLabel("6");
            JLabel Lblcustomer7 = new JLabel("7");
            JLabel Lblcustomer8 = new JLabel("8");
            JLabel Lblcustomer9 = new JLabel("9");
            
            JLabel Lblcustomer10 = new JLabel("10");
            JLabel Lblcustomer11 = new JLabel("11");
            JLabel Lblcustomer12 = new JLabel("12");
            JLabel Lblcustomer13 = new JLabel("13");
            JLabel Lblcustomer14 = new JLabel("14");
            JLabel Lblcustomer15 = new JLabel("15");
            JLabel Lblcustomer16 = new JLabel("16");
            JLabel Lblcustomer17 = new JLabel("17");
            JLabel Lblcustomer18 = new JLabel("18");
            JLabel Lblcustomer19 = new JLabel("19");
            JLabel Lblcustomer20 = new JLabel("20");
            
            Lblcustomer1.setBounds(0, 0, 50, 50);
            Lblcustomer2.setBounds(0, 0, 50, 50);
            Lblcustomer3.setBounds(0, 0, 50, 50);
            Lblcustomer4.setBounds(0, 0, 50, 50);
            Lblcustomer5.setBounds(0, 0, 50, 50);
            Lblcustomer6.setBounds(0, 0, 50, 50);
            Lblcustomer7.setBounds(0, 0, 50, 50);
            Lblcustomer8.setBounds(0, 0, 50, 50);
            Lblcustomer9.setBounds(0, 0, 50, 50);
            Lblcustomer10.setBounds(0, 0, 50, 50);
            Lblcustomer11.setBounds(0, 0, 50, 50);
            Lblcustomer12.setBounds(0, 0, 50, 50);
            Lblcustomer13.setBounds(0, 0, 50, 50);
            Lblcustomer14.setBounds(0, 0, 50, 50);
            Lblcustomer15.setBounds(0, 0, 50, 50);
            Lblcustomer16.setBounds(0, 0, 50, 50);
            Lblcustomer17.setBounds(0, 0, 50, 50);
            Lblcustomer18.setBounds(0, 0, 50, 50);
            Lblcustomer19.setBounds(0, 0, 50, 50);
            Lblcustomer20.setBounds(0, 0, 50, 50);
            
            Lblcustomer1.setLocation((int)(60+30*(Integer.parseInt(Arrays.total[0][5]))), 450);
            Lblcustomer2.setLocation((int)(60+30*(Integer.parseInt(Arrays.total[1][5]))), 450);
            Lblcustomer3.setLocation((int)(60+30*(Integer.parseInt(Arrays.total[2][5]))), 450);
            Lblcustomer4.setLocation((int)(60+30*(Integer.parseInt(Arrays.total[3][5]))), 450);
            Lblcustomer5.setLocation((int)(60+30*(Integer.parseInt(Arrays.total[4][5]))), 450);
            Lblcustomer6.setLocation((int)(60+30*(Integer.parseInt(Arrays.total[5][5]))), 450);
            Lblcustomer7.setLocation((int)(60+30*(Integer.parseInt(Arrays.total[6][5]))), 450);
            Lblcustomer8.setLocation((int)(60+30*(Integer.parseInt(Arrays.total[7][5]))), 450);
            Lblcustomer9.setLocation((int)(60+30*(Integer.parseInt(Arrays.total[8][5]))), 450);
            Lblcustomer10.setLocation((int)(60+30*(Integer.parseInt(Arrays.total[9][5]))), 450);
            Lblcustomer11.setLocation((int)(60+30*(Integer.parseInt(Arrays.total[10][5]))), 450);
            Lblcustomer12.setLocation((int)(60+30*(Integer.parseInt(Arrays.total[11][5]))), 450);
            Lblcustomer13.setLocation((int)(60+30*(Integer.parseInt(Arrays.total[12][5]))), 450);
            Lblcustomer14.setLocation((int)(60+30*(Integer.parseInt(Arrays.total[13][5]))), 450);
            Lblcustomer15.setLocation((int)(60+30*(Integer.parseInt(Arrays.total[14][5]))), 450);
            Lblcustomer16.setLocation((int)(60+30*(Integer.parseInt(Arrays.total[15][5]))), 450);
            Lblcustomer17.setLocation((int)(60+30*(Integer.parseInt(Arrays.total[16][5]))), 450);
            Lblcustomer18.setLocation((int)(60+30*(Integer.parseInt(Arrays.total[17][5]))), 450);
            Lblcustomer19.setLocation((int)(60+30*(Integer.parseInt(Arrays.total[18][5]))), 450);
            Lblcustomer20.setLocation((int)(60+30*(Integer.parseInt(Arrays.total[19][5]))), 450);
            
            f2.add(Lblcustomer1);
            f2.add(Lblcustomer2);
            f2.add(Lblcustomer3);
            f2.add(Lblcustomer4);
            f2.add(Lblcustomer5);
            f2.add(Lblcustomer6);
            f2.add(Lblcustomer7);
            f2.add(Lblcustomer8);
            f2.add(Lblcustomer9);
            f2.add(Lblcustomer10);
            f2.add(Lblcustomer11);
            f2.add(Lblcustomer12);
            f2.add(Lblcustomer13);
            f2.add(Lblcustomer14);
            f2.add(Lblcustomer15);
            f2.add(Lblcustomer16);
            f2.add(Lblcustomer17);
            f2.add(Lblcustomer18);
            f2.add(Lblcustomer19);
            f2.add(Lblcustomer20);
            //////////////////////////////////////////
            JLabel L0=new JLabel("0");
            JLabel L1=new JLabel("1");
            JLabel L2=new JLabel("2");
            JLabel L3=new JLabel("3");
            JLabel L4=new JLabel("4");
            JLabel L5=new JLabel("5");
            JLabel L6=new JLabel("6");
            JLabel L7=new JLabel("7");
            JLabel L8=new JLabel("8");
            JLabel L9=new JLabel("9");
            JLabel L10=new JLabel("10");
            JLabel L11=new JLabel("11");
            JLabel L12=new JLabel("12");
            JLabel L13=new JLabel("13");
            JLabel L14=new JLabel("14");
            JLabel L15=new JLabel("15");
            JLabel L16=new JLabel("16");
            JLabel L17=new JLabel("17");
            JLabel L18=new JLabel("18");
            JLabel L19=new JLabel("19");
            JLabel L20=new JLabel("20");
            JLabel L21=new JLabel("21");
            JLabel L22=new JLabel("22");
            JLabel L23=new JLabel("23");
            JLabel L24=new JLabel("24");
            JLabel L25=new JLabel("25");
            JLabel L26=new JLabel("26");
            JLabel L27=new JLabel("27");
            JLabel L28=new JLabel("28");
            JLabel L29=new JLabel("29");
            JLabel L30=new JLabel("30");
            JLabel L31=new JLabel("31");
            JLabel L32=new JLabel("32");
            JLabel L33=new JLabel("33");
            JLabel L34=new JLabel("34");
            JLabel L35=new JLabel("35");
            JLabel L36=new JLabel("36");
            JLabel L37=new JLabel("37");
            JLabel L38=new JLabel("38");
            JLabel L39=new JLabel("39");
            JLabel L40=new JLabel("40");
            JLabel L41=new JLabel("41");
            JLabel L42=new JLabel("42");
            JLabel L43=new JLabel("43");
            JLabel L44=new JLabel("44");
            JLabel L45=new JLabel("45");
            JLabel L46=new JLabel("46");
            JLabel L47=new JLabel("47");
            JLabel L48=new JLabel("48");
            JLabel L49=new JLabel("49");
            JLabel L50=new JLabel("50");
            JLabel L51=new JLabel("51");
            JLabel L52=new JLabel("52");
            JLabel L53=new JLabel("53");
            JLabel L54=new JLabel("54");
            JLabel L55=new JLabel("55");
            JLabel L56=new JLabel("56");
            JLabel L57=new JLabel("57");
            JLabel L58=new JLabel("58");
            JLabel L59=new JLabel("59");
            JLabel L60=new JLabel("60");
            JLabel L61=new JLabel("61");
            JLabel L62=new JLabel("62");
            
            L0.setBounds(0,0, 50, 50);
            L1.setBounds(0,0, 50, 50);
            L2.setBounds(0,0, 50, 50);
            L3.setBounds(0,0, 50, 50);
            L4.setBounds(0,0, 50, 50);
            L5.setBounds(0,0, 50, 50);
            L6.setBounds(0,0, 50, 50);
            L7.setBounds(0,0, 50, 50);
            L8.setBounds(0,0, 50, 50);
            L9.setBounds(0,0, 50, 50);
            L10.setBounds(0,0, 50, 50);
            L11.setBounds(0,0, 50, 50);
            L12.setBounds(0,0, 50, 50);
            L13.setBounds(0,0, 50, 50);
            L14.setBounds(0,0, 50, 50);
            L15.setBounds(0,0, 50, 50);
            L16.setBounds(0,0, 50, 50);
            L17.setBounds(0,0, 50, 50);
            L18.setBounds(0,0, 50, 50);
            L19.setBounds(0,0, 50, 50);
            L20.setBounds(0,0, 50, 50);
            L21.setBounds(0,0, 50, 50);
            L22.setBounds(0,0, 50, 50);
            L23.setBounds(0,0, 50, 50);
            L24.setBounds(0,0, 50, 50);
            L25.setBounds(0,0, 50, 50);
            L26.setBounds(0,0, 50, 50);
            L27.setBounds(0,0, 50, 50);
            L28.setBounds(0,0, 50, 50);
            L29.setBounds(0,0, 50, 50);
            L30.setBounds(0,0, 50, 50);
            L31.setBounds(0,0, 50, 50);
            L32.setBounds(0,0, 50, 50);
            L33.setBounds(0,0, 50, 50);
            L34.setBounds(0,0, 50, 50);
            L35.setBounds(0,0, 50, 50);
            L36.setBounds(0,0, 50, 50);
            L37.setBounds(0,0, 50, 50);
            L38.setBounds(0,0, 50, 50);
            L39.setBounds(0,0, 50, 50);
            L40.setBounds(0,0, 50, 50);
            L41.setBounds(0,0, 50, 50);
            L42.setBounds(0,0, 50, 50);
            L43.setBounds(0,0, 50, 50);
            L44.setBounds(0,0, 50, 50);
            L45.setBounds(0,0, 50, 50);
            L46.setBounds(0,0, 50, 50);
            L47.setBounds(0,0, 50, 50);
            L48.setBounds(0,0, 50, 50);
            L49.setBounds(0,0, 50, 50);
            L50.setBounds(0,0, 50, 50);
            L51.setBounds(0,0, 50, 50);
            L52.setBounds(0,0, 50, 50);
            L53.setBounds(0,0, 50, 50);
            L54.setBounds(0,0, 50, 50);
            L55.setBounds(0,0, 50, 50);
            L56.setBounds(0,0, 50, 50);
            L57.setBounds(0,0, 50, 50);
            L58.setBounds(0,0, 50, 50);
            L59.setBounds(0,0, 50, 50);
            L60.setBounds(0,0, 50, 50);
            L61.setBounds(0,0, 50, 50);
            L62.setBounds(0,0, 50, 50);
            
            L0.setLocation(50, 500);
            L1.setLocation(80, 500);
            L2.setLocation(110, 500);
            L3.setLocation(140, 500);
            L4.setLocation(170, 500);
            L5.setLocation(200, 500);
            L6.setLocation(230, 500);
            L7.setLocation(260, 500);
            L8.setLocation(290, 500);
            L9.setLocation(320, 500);
            L10.setLocation(350, 500);
            L11.setLocation(380, 500);
            L12.setLocation(410, 500);
            L13.setLocation(440, 500);
            L14.setLocation(470, 500);
            L15.setLocation(500, 500);
            L16.setLocation(530, 500);
            L17.setLocation(560, 500);
            L18.setLocation(590, 500);
            L19.setLocation(620, 500);
            L20.setLocation(650, 500);
            L21.setLocation(680, 500);
            L22.setLocation(710, 500);
            L23.setLocation(740, 500);
            L24.setLocation(770, 500);
            L25.setLocation(800, 500);
            L26.setLocation(830, 500);
            L27.setLocation(860, 500);
            L28.setLocation(890, 500);
            L29.setLocation(920, 500);
            L30.setLocation(950, 500);
            L31.setLocation(980, 500);
            L32.setLocation(1010, 500);
            L33.setLocation(1040, 500);
            L34.setLocation(1070, 500);
            L35.setLocation(1100, 500);
            L36.setLocation(1130, 500);
            L37.setLocation(1160, 500);
            L38.setLocation(1190, 500);
            L39.setLocation(1220, 500);
            L40.setLocation(1250, 500);
            L41.setLocation(1280, 500);
            L42.setLocation(1310, 500);
            L43.setLocation(1340, 500);
            L44.setLocation(1370, 500);
            L45.setLocation(1400, 500);
            L46.setLocation(1430, 500);
            L47.setLocation(1460, 500);
            L48.setLocation(1490, 500);
            L49.setLocation(1520, 500);
            L50.setLocation(1550, 500);
            L51.setLocation(1580, 500);
            L52.setLocation(1610, 500);
            L53.setLocation(1640, 500);
            L54.setLocation(1670, 500);
            L55.setLocation(1700, 500);
            L56.setLocation(1730, 500);
            L57.setLocation(1760, 500);
            L58.setLocation(1790, 500);
            L59.setLocation(1820, 500);
            L60.setLocation(1850, 500);
            L61.setLocation(1880, 500);
            L62.setLocation(1910, 500);
            
            f2.add(L0);
            f2.add(L1);
            f2.add(L2);
            f2.add(L3);
            f2.add(L4);
            f2.add(L5);
            f2.add(L6);
            f2.add(L7);
            f2.add(L8);
            f2.add(L9);
            f2.add(L10);
            f2.add(L11);
            f2.add(L12);
            f2.add(L13);
            f2.add(L14);
            f2.add(L15);
            f2.add(L16);
            f2.add(L17);
            f2.add(L18);
            f2.add(L19);
            f2.add(L20);
            f2.add(L21);
            f2.add(L22);
            f2.add(L23);
            f2.add(L24);
            f2.add(L25);
            f2.add(L26);
            f2.add(L27);
            f2.add(L28);
            f2.add(L29);
            f2.add(L30);
            f2.add(L31);
            f2.add(L32);
            f2.add(L33);
            f2.add(L34);
            f2.add(L35);
            f2.add(L36);
            f2.add(L37);
            f2.add(L38);
            f2.add(L39);
            f2.add(L40);
            f2.add(L41);
            f2.add(L42);
            f2.add(L43);
            f2.add(L44);
            f2.add(L45);
            f2.add(L46);
            f2.add(L47);
            f2.add(L48);
            f2.add(L49);
            f2.add(L50);
            f2.add(L51);
            f2.add(L52);
            f2.add(L53);
            f2.add(L54);
            f2.add(L55);
            f2.add(L56);
            f2.add(L57);
            f2.add(L58);
            f2.add(L59);
            f2.add(L60);
            f2.add(L61);
            f2.add(L62);
        
            
            f2.setVisible(true);
            f2.setLocationRelativeTo(null);
            f2.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    } 
      catch (Exception ex){
          JOptionPane.showMessageDialog(null,ex.getMessage());
    }

// TODO add your handling code here:
    }//GEN-LAST:event_btn_DrawActionPerformed

    private void btn_Show_infoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Show_infoActionPerformed

        try{
            FRM_information f =new FRM_information();
            f.setVisible(true);
            f.setLocationRelativeTo(null);
            f.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        }
        catch (Exception ex){
            JOptionPane.showMessageDialog(null,ex.getMessage());
        }// TODO add your handling code here:
    }//GEN-LAST:event_btn_Show_infoActionPerformed

    private void btn_Show_info1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Show_info1ActionPerformed

this.dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_btn_Show_info1ActionPerformed

    
        
        
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FRM_Tables.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FRM_Tables.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FRM_Tables.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FRM_Tables.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FRM_Tables().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Arrival_Table;
    private javax.swing.JTable Server_Table;
    private javax.swing.JTable Table_Total;
    private javax.swing.JButton btn_Draw;
    private javax.swing.JButton btn_Set_Excel;
    private javax.swing.JButton btn_Show_info;
    private javax.swing.JButton btn_Show_info1;
    private javax.swing.JButton btn_Step1;
    private javax.swing.JButton btn_Step2;
    private javax.swing.JButton btn_Step3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    // End of variables declaration//GEN-END:variables
}
